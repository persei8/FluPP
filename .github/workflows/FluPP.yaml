name: build-test

on:
  pull_request:
  push:
    paths-ignore: [ "README.md" ]
    branches: [ "main", "releases/*" ]
    tags: [ "*" ]

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
        lazarus-versions: [stable]

    steps:
    - name: Cechout source code
      uses: actions/checkout@v3

    - name: Install Lazarus
      uses: gcarreno/setup-lazarus@v3
      with:
        lazarus-version: ${{ matrix.lazarus-versions }}
        include-packages: "NiceGrid, VirtualTreeViewV5"
        with-cache: false

    - name: Build the Main Application (Windows)
      if: ${{ matrix.operating-system == 'windows-latest' }}
      run: lazbuild -B --bm=Release "src/FluPP.lpi"

    - name: Artifacts (Windows)
      if: ${{ matrix.operating-system == 'windows-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: FluPP-windows
        path: |
          bin\x86_64-win64-win32\release\FluPP.exe

    - name: Build the Main Application (Ubuntu)
      if: ${{ matrix.operating-system == 'ubuntu-latest' }}
      run: |
        echo Building with GTK2
        lazbuild -B --bm=Release "src/FluPP.lpi"
        echo Installing Qt5 Dev
        sudo apt update
        sudo apt install libqt5pas-dev -y
        echo Building with Qt5
        lazbuild -B --bm=Release --ws=qt5 "src/FluPP.lpi"

    - name: Artifacts (Linux gtk2)
      if: ${{ matrix.operating-system == 'ubuntu-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: FLuPP-linux-gtk
        path: |
          bin/x86_64-linux-gtk2/release/FluPP

    - name: Artifacts (Linux qt)
      if: ${{ matrix.operating-system == 'ubuntu-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: FluPP-linux-qt
        path: |
          bin/x86_64-linux-qt5/release/FluPP

    - name: Build the Main Application (macOS)
      if: ${{ matrix.operating-system == 'macos-latest' }}
      run: lazbuild -B --bm=Release --ws=cocoa "src/FluPP.lpi"

    - name: Artifacts (macOS)
      if: ${{ matrix.operating-system == 'macos-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: FluPP-macos
        path: |
           bin/x86_64-darwin-cocoa/release/FluPP
  
  package-release:
    if: contains(github.ref, '/tags/')

    name: Package and create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set output
      id: vars
      run: echo "tag=${GITHUB_REF#refs/*/}" >> ${GITHUB_OUTPUT}

    - name: Download the Release binary
      uses: actions/download-artifact@v2

    - name: List files
      run: |
          ls -al
          ls -al FluPP-windows
          ls -al FluPP-linux-gtk
          ls -al FluPP-linux-qt
          ls -al FluPP-macos

    - name: Package Windows
      run: |
          cp FluPP-windows/FluPP.exe .
          tag=${{ github.event.ref }}
          tag=${tag#"refs/tags/"}
          zip FluPP-${tag}-x86-win.zip FluPP.exe
    - name: Package Ubuntu latest
      run: |
          cp FluPP-linux-gtk/FluPP .
          tag=${{ github.event.ref }}
          tag=${tag#"refs/tags/"}
          chmod +x FluPP
          tar -zcvf FluPP-${tag}-x86_64-linux-qt.tgz FluPP
          zip -r FluPP-${tag}-x86_64-linux-qt.zip FluPP
    - name: Package Ubuntu latest
      run: |
          cp FluPP-linux-qt/FluPP .
          tag=${{ github.event.ref }}
          tag=${tag#"refs/tags/"}
          chmod +x FluPP
          tar -zcvf FluPP-${tag}-x86_64-linux-gtk.tgz FluPP
          zip -r FluPP-${tag}-x86_64-linux-gtk.zip FluPP    
    - name: Upload Release
      uses: softprops/action-gh-release@v1
      with:
          files: |
            FluPP-*.zip
            FluPP-*.tgz
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

